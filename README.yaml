---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: Terraform AWS EKS

# License of this project
license: "MIT"

# Canonical GitHub repo
github_repo: clouddrove/terraform-aws-eks

# Badges to display
badges:
  - name: "Terraform"
    image: "https://img.shields.io/badge/Terraform-v0.12-green"
    url: "https://www.terraform.io"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-MIT-blue.svg"
    url: "LICENSE.md"

# Prerequesties to display
prerequesties:
  - name: "Kubectl"
    url: "https://kubernetes.io/docs/tasks/tools/install-kubectl/"
  - name: "AWS IAM Authenticator"
    url: "https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html"

# What Includes to display
what_includes:
  - name: "[Autoscale](modules/autoscale/README.md)"
  - name: "[EKS](modules/eks/README.md)"
  - name: "[Worker](modules/worker/README.md)"

#  description of this project
description: |-
  Terraform module will be created Autoscaling, Workers, EKS.

# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  ### Sample example
  Here is an example of how you can use this module in your inventory structure:
  ```hcl
  module "eks-cluster" {
    source = "git::https://github.com/clouddrove/terraform-aws-eks.git?ref=tags/0.12.2"

    ## Tags
    name        = "eks"
    application = "clouddrove"
    environment = "test"
    enabled     = true
    label_order = ["environment", "name", "application"]

    ## Network
    vpc_id                          = module.vpc.vpc_id
    subnet_ids                      = module.subnets.public_subnet_id
    allowed_security_groups_cluster = []
    allowed_security_groups_workers = []
    additional_security_group_ids   = [module.ssh.security_group_ids]
    endpoint_private_access         = false
    endpoint_public_access          = true

    ## Ec2
    key_name      = module.keypair.name
    image_id      = "ami-0dd0a16a2bd0784b8"
    instance_type = "t3.small"
    max_size      = 3
    min_size      = 1
    volume_size   = 20

    ## Spot
    spot_enabled                = true
    spot_max_size               = 3
    spot_min_size               = 1
    max_price                   = "0.20"
    spot_instance_type          = "m5.large"
    associate_public_ip_address = true

    ## Cluster
    wait_for_capacity_timeout = "15m"
    apply_config_map_aws_auth = true
    kubernetes_version        = "1.14"

    ## Schedule
    scheduler_down          = "0 19 * * MON-FRI"
    scheduler_up            = "0 6 * * MON-FRI"
    min_size_scaledown      = 0
    max_size_scaledown      = 1
    spot_min_size_scaledown = 0
    spot_max_size_scaledown = 1

    ## Health Checks
    cpu_utilization_high_threshold_percent = 80
    cpu_utilization_low_threshold_percent  = 20
    health_check_type                      = "EC2"

    ## ebs encryption
    ebs_encryption = false

    ## logs
    enabled_cluster_log_types = ["api", "audit", "authenticator", "controllerManager", "scheduler"]
  }
  ```